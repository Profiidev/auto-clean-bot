//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.8

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "clean_channel")]
pub struct Model {
  #[sea_orm(primary_key, auto_increment = false)]
  pub id: Uuid,
  pub channel: i64,
  pub delay: i64,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
  #[sea_orm(has_many = "super::clean_message::Entity")]
  CleanMessage,
}

impl Related<super::clean_message::Entity> for Entity {
  fn to() -> RelationDef {
    Relation::CleanMessage.def()
  }
}

impl ActiveModelBehavior for ActiveModel {}
